State 0:
program' -> . program [ # ]
-- On CLASS shift to state 1
-- On program shift to state 54
-- On main_class shift to state 55

State 1:
main_class -> CLASS . IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On IDENT shift to state 2

State 2:
main_class -> CLASS IDENT . LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On LBRACE shift to state 3

State 3:
main_class -> CLASS IDENT LBRACE . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On PUBLIC shift to state 4

State 4:
main_class -> CLASS IDENT LBRACE PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On STATIC shift to state 5

State 5:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On VOID shift to state 6

State 6:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On MAIN shift to state 7

State 7:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On LPAREN shift to state 8

State 8:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On STRING shift to state 9

State 9:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On LBRACKET shift to state 10

State 10:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On RBRACKET shift to state 11

State 11:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . IDENT RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On IDENT shift to state 12

State 12:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT . RPAREN LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On RPAREN shift to state 13

State 13:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN . LBRACE statement RBRACE RBRACE [ EOF CLASS ]
-- On LBRACE shift to state 14

State 14:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE . statement RBRACE RBRACE [ EOF CLASS ]
-- On SYSO shift to state 15
-- On LBRACE shift to state 36
-- On IDENT shift to state 37
-- On statement shift to state 51

State 15:
statement -> SYSO . LPAREN expression RPAREN SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On LPAREN shift to state 16

State 16:
statement -> SYSO LPAREN . expression RPAREN SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 33

State 17:
expression -> LPAREN . expression RPAREN [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 21

State 18:
raw_expression -> INT_CONST . [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On TIMES reduce production raw_expression -> INT_CONST 
-- On SEMICOLON reduce production raw_expression -> INT_CONST 
-- On RPAREN reduce production raw_expression -> INT_CONST 
-- On RBRACKET reduce production raw_expression -> INT_CONST 
-- On PLUS reduce production raw_expression -> INT_CONST 
-- On MINUS reduce production raw_expression -> INT_CONST 
-- On LT reduce production raw_expression -> INT_CONST 
-- On AND reduce production raw_expression -> INT_CONST 

State 19:
raw_expression -> IDENT . [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On TIMES reduce production raw_expression -> IDENT 
-- On SEMICOLON reduce production raw_expression -> IDENT 
-- On RPAREN reduce production raw_expression -> IDENT 
-- On RBRACKET reduce production raw_expression -> IDENT 
-- On PLUS reduce production raw_expression -> IDENT 
-- On MINUS reduce production raw_expression -> IDENT 
-- On LT reduce production raw_expression -> IDENT 
-- On AND reduce production raw_expression -> IDENT 

State 20:
expression -> raw_expression . [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On TIMES reduce production expression -> raw_expression 
-- On SEMICOLON reduce production expression -> raw_expression 
-- On RPAREN reduce production expression -> raw_expression 
-- On RBRACKET reduce production expression -> raw_expression 
-- On PLUS reduce production expression -> raw_expression 
-- On MINUS reduce production expression -> raw_expression 
-- On LT reduce production expression -> raw_expression 
-- On AND reduce production expression -> raw_expression 

State 21:
expression -> LPAREN expression . RPAREN [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . PLUS expression [ TIMES RPAREN PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES RPAREN PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES RPAREN PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES RPAREN PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES RPAREN PLUS MINUS LT AND ]
-- On TIMES shift to state 22
-- On RPAREN shift to state 30
-- On PLUS shift to state 24
-- On MINUS shift to state 28
-- On LT shift to state 26
-- On AND shift to state 31

State 22:
raw_expression -> expression TIMES . expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 23

State 23:
raw_expression -> expression . PLUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression TIMES expression . [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On PLUS shift to state 24
-- On MINUS shift to state 28
-- On LT shift to state 26
-- On TIMES reduce production raw_expression -> expression TIMES expression 
-- On SEMICOLON reduce production raw_expression -> expression TIMES expression 
-- On RPAREN reduce production raw_expression -> expression TIMES expression 
-- On RBRACKET reduce production raw_expression -> expression TIMES expression 
-- On AND reduce production raw_expression -> expression TIMES expression 

State 24:
raw_expression -> expression PLUS . expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 25

State 25:
raw_expression -> expression . PLUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression PLUS expression . [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On LT shift to state 26
-- On TIMES reduce production raw_expression -> expression PLUS expression 
-- On SEMICOLON reduce production raw_expression -> expression PLUS expression 
-- On RPAREN reduce production raw_expression -> expression PLUS expression 
-- On RBRACKET reduce production raw_expression -> expression PLUS expression 
-- On PLUS reduce production raw_expression -> expression PLUS expression 
-- On MINUS reduce production raw_expression -> expression PLUS expression 
-- On AND reduce production raw_expression -> expression PLUS expression 

State 26:
raw_expression -> expression LT . expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 27

State 27:
raw_expression -> expression . PLUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression LT expression . [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On TIMES reduce production raw_expression -> expression LT expression 
-- On SEMICOLON reduce production raw_expression -> expression LT expression 
-- On RPAREN reduce production raw_expression -> expression LT expression 
-- On RBRACKET reduce production raw_expression -> expression LT expression 
-- On PLUS reduce production raw_expression -> expression LT expression 
-- On MINUS reduce production raw_expression -> expression LT expression 
-- On LT reduce production raw_expression -> expression LT expression 
-- On AND reduce production raw_expression -> expression LT expression 

State 28:
raw_expression -> expression MINUS . expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 29

State 29:
raw_expression -> expression . PLUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression MINUS expression . [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On LT shift to state 26
-- On TIMES reduce production raw_expression -> expression MINUS expression 
-- On SEMICOLON reduce production raw_expression -> expression MINUS expression 
-- On RPAREN reduce production raw_expression -> expression MINUS expression 
-- On RBRACKET reduce production raw_expression -> expression MINUS expression 
-- On PLUS reduce production raw_expression -> expression MINUS expression 
-- On MINUS reduce production raw_expression -> expression MINUS expression 
-- On AND reduce production raw_expression -> expression MINUS expression 

State 30:
expression -> LPAREN expression RPAREN . [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On TIMES reduce production expression -> LPAREN expression RPAREN 
-- On SEMICOLON reduce production expression -> LPAREN expression RPAREN 
-- On RPAREN reduce production expression -> LPAREN expression RPAREN 
-- On RBRACKET reduce production expression -> LPAREN expression RPAREN 
-- On PLUS reduce production expression -> LPAREN expression RPAREN 
-- On MINUS reduce production expression -> LPAREN expression RPAREN 
-- On LT reduce production expression -> LPAREN expression RPAREN 
-- On AND reduce production expression -> LPAREN expression RPAREN 

State 31:
raw_expression -> expression AND . expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 32

State 32:
raw_expression -> expression . PLUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression AND expression . [ TIMES SEMICOLON RPAREN RBRACKET PLUS MINUS LT AND ]
-- On TIMES shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 28
-- On LT shift to state 26
-- On SEMICOLON reduce production raw_expression -> expression AND expression 
-- On RPAREN reduce production raw_expression -> expression AND expression 
-- On RBRACKET reduce production raw_expression -> expression AND expression 
-- On AND reduce production raw_expression -> expression AND expression 

State 33:
raw_expression -> expression . PLUS expression [ TIMES RPAREN PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES RPAREN PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES RPAREN PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES RPAREN PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES RPAREN PLUS MINUS LT AND ]
statement -> SYSO LPAREN expression . RPAREN SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On TIMES shift to state 22
-- On RPAREN shift to state 34
-- On PLUS shift to state 24
-- On MINUS shift to state 28
-- On LT shift to state 26
-- On AND shift to state 31

State 34:
statement -> SYSO LPAREN expression RPAREN . SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On SEMICOLON shift to state 35

State 35:
statement -> SYSO LPAREN expression RPAREN SEMICOLON . [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On SYSO reduce production statement -> SYSO LPAREN expression RPAREN SEMICOLON 
-- On RETURN reduce production statement -> SYSO LPAREN expression RPAREN SEMICOLON 
-- On RBRACE reduce production statement -> SYSO LPAREN expression RPAREN SEMICOLON 
-- On LBRACE reduce production statement -> SYSO LPAREN expression RPAREN SEMICOLON 
-- On IDENT reduce production statement -> SYSO LPAREN expression RPAREN SEMICOLON 

State 36:
statement -> LBRACE . list(statement) RBRACE [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On SYSO shift to state 15
-- On LBRACE shift to state 36
-- On IDENT shift to state 37
-- On statement shift to state 47
-- On list(statement) shift to state 49
-- On RBRACE reduce production list(statement) -> 

State 37:
statement -> IDENT . ASSIGN expression SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
statement -> IDENT . LBRACKET expression RBRACKET ASSIGN expression SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On LBRACKET shift to state 38
-- On ASSIGN shift to state 44

State 38:
statement -> IDENT LBRACKET . expression RBRACKET ASSIGN expression SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 39

State 39:
raw_expression -> expression . PLUS expression [ TIMES RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES RBRACKET PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES RBRACKET PLUS MINUS LT AND ]
statement -> IDENT LBRACKET expression . RBRACKET ASSIGN expression SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On TIMES shift to state 22
-- On RBRACKET shift to state 40
-- On PLUS shift to state 24
-- On MINUS shift to state 28
-- On LT shift to state 26
-- On AND shift to state 31

State 40:
statement -> IDENT LBRACKET expression RBRACKET . ASSIGN expression SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On ASSIGN shift to state 41

State 41:
statement -> IDENT LBRACKET expression RBRACKET ASSIGN . expression SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 42

State 42:
raw_expression -> expression . PLUS expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
statement -> IDENT LBRACKET expression RBRACKET ASSIGN expression . SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On TIMES shift to state 22
-- On SEMICOLON shift to state 43
-- On PLUS shift to state 24
-- On MINUS shift to state 28
-- On LT shift to state 26
-- On AND shift to state 31

State 43:
statement -> IDENT LBRACKET expression RBRACKET ASSIGN expression SEMICOLON . [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On SYSO reduce production statement -> IDENT LBRACKET expression RBRACKET ASSIGN expression SEMICOLON 
-- On RETURN reduce production statement -> IDENT LBRACKET expression RBRACKET ASSIGN expression SEMICOLON 
-- On RBRACE reduce production statement -> IDENT LBRACKET expression RBRACKET ASSIGN expression SEMICOLON 
-- On LBRACE reduce production statement -> IDENT LBRACKET expression RBRACKET ASSIGN expression SEMICOLON 
-- On IDENT reduce production statement -> IDENT LBRACKET expression RBRACKET ASSIGN expression SEMICOLON 

State 44:
statement -> IDENT ASSIGN . expression SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 45

State 45:
raw_expression -> expression . PLUS expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
statement -> IDENT ASSIGN expression . SEMICOLON [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On TIMES shift to state 22
-- On SEMICOLON shift to state 46
-- On PLUS shift to state 24
-- On MINUS shift to state 28
-- On LT shift to state 26
-- On AND shift to state 31

State 46:
statement -> IDENT ASSIGN expression SEMICOLON . [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On SYSO reduce production statement -> IDENT ASSIGN expression SEMICOLON 
-- On RETURN reduce production statement -> IDENT ASSIGN expression SEMICOLON 
-- On RBRACE reduce production statement -> IDENT ASSIGN expression SEMICOLON 
-- On LBRACE reduce production statement -> IDENT ASSIGN expression SEMICOLON 
-- On IDENT reduce production statement -> IDENT ASSIGN expression SEMICOLON 

State 47:
list(statement) -> statement . list(statement) [ RETURN RBRACE ]
-- On SYSO shift to state 15
-- On LBRACE shift to state 36
-- On IDENT shift to state 37
-- On statement shift to state 47
-- On list(statement) shift to state 48
-- On RETURN reduce production list(statement) -> 
-- On RBRACE reduce production list(statement) -> 

State 48:
list(statement) -> statement list(statement) . [ RETURN RBRACE ]
-- On RETURN reduce production list(statement) -> statement list(statement) 
-- On RBRACE reduce production list(statement) -> statement list(statement) 

State 49:
statement -> LBRACE list(statement) . RBRACE [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On RBRACE shift to state 50

State 50:
statement -> LBRACE list(statement) RBRACE . [ SYSO RETURN RBRACE LBRACE IDENT ]
-- On SYSO reduce production statement -> LBRACE list(statement) RBRACE 
-- On RETURN reduce production statement -> LBRACE list(statement) RBRACE 
-- On RBRACE reduce production statement -> LBRACE list(statement) RBRACE 
-- On LBRACE reduce production statement -> LBRACE list(statement) RBRACE 
-- On IDENT reduce production statement -> LBRACE list(statement) RBRACE 

State 51:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement . RBRACE RBRACE [ EOF CLASS ]
-- On RBRACE shift to state 52

State 52:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE . RBRACE [ EOF CLASS ]
-- On RBRACE shift to state 53

State 53:
main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE . [ EOF CLASS ]
-- On EOF reduce production main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE 
-- On CLASS reduce production main_class -> CLASS IDENT LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENT RPAREN LBRACE statement RBRACE RBRACE 

State 54:
program' -> program . [ # ]
-- On # accept program

State 55:
program -> main_class . list(classDeclaration) EOF [ # ]
-- On CLASS shift to state 56
-- On list(classDeclaration) shift to state 99
-- On classDeclaration shift to state 101
-- On EOF reduce production list(classDeclaration) -> 

State 56:
classDeclaration -> CLASS . IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE [ EOF CLASS ]
classDeclaration -> CLASS . IDENT EXTENDS IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE [ EOF CLASS ]
-- On IDENT shift to state 57

State 57:
classDeclaration -> CLASS IDENT . LBRACE list(varDeclaration) list(methodDeclaration) RBRACE [ EOF CLASS ]
classDeclaration -> CLASS IDENT . EXTENDS IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE [ EOF CLASS ]
-- On LBRACE shift to state 58
-- On EXTENDS shift to state 93

State 58:
classDeclaration -> CLASS IDENT LBRACE . list(varDeclaration) list(methodDeclaration) RBRACE [ EOF CLASS ]
-- On INTEGER shift to state 59
-- On IDENT shift to state 62
-- On BOOLEAN shift to state 63
-- On varDeclaration shift to state 64
-- On typ shift to state 65
-- On list(varDeclaration) shift to state 69
-- On RBRACE reduce production list(varDeclaration) -> 
-- On PUBLIC reduce production list(varDeclaration) -> 

State 59:
typ -> INTEGER . [ IDENT ]
typ -> INTEGER . LBRACKET RBRACKET [ IDENT ]
-- On LBRACKET shift to state 60
-- On IDENT reduce production typ -> INTEGER 

State 60:
typ -> INTEGER LBRACKET . RBRACKET [ IDENT ]
-- On RBRACKET shift to state 61

State 61:
typ -> INTEGER LBRACKET RBRACKET . [ IDENT ]
-- On IDENT reduce production typ -> INTEGER LBRACKET RBRACKET 

State 62:
typ -> IDENT . [ IDENT ]
-- On IDENT reduce production typ -> IDENT 

State 63:
typ -> BOOLEAN . [ IDENT ]
-- On IDENT reduce production typ -> BOOLEAN 

State 64:
list(varDeclaration) -> varDeclaration . list(varDeclaration) [ SYSO RETURN RBRACE PUBLIC LBRACE IDENT ]
-- On INTEGER shift to state 59
-- On IDENT shift to state 62
-- On BOOLEAN shift to state 63
-- On varDeclaration shift to state 64
-- On typ shift to state 65
-- On list(varDeclaration) shift to state 68
-- On SYSO reduce production list(varDeclaration) -> 
-- On RETURN reduce production list(varDeclaration) -> 
-- On RBRACE reduce production list(varDeclaration) -> 
-- On PUBLIC reduce production list(varDeclaration) -> 
-- On LBRACE reduce production list(varDeclaration) -> 
-- On IDENT reduce production list(varDeclaration) -> 
** Conflict on IDENT

State 65:
varDeclaration -> typ . IDENT SEMICOLON [ SYSO RETURN RBRACE PUBLIC LBRACE INTEGER IDENT BOOLEAN ]
-- On IDENT shift to state 66

State 66:
varDeclaration -> typ IDENT . SEMICOLON [ SYSO RETURN RBRACE PUBLIC LBRACE INTEGER IDENT BOOLEAN ]
-- On SEMICOLON shift to state 67

State 67:
varDeclaration -> typ IDENT SEMICOLON . [ SYSO RETURN RBRACE PUBLIC LBRACE INTEGER IDENT BOOLEAN ]
-- On SYSO reduce production varDeclaration -> typ IDENT SEMICOLON 
-- On RETURN reduce production varDeclaration -> typ IDENT SEMICOLON 
-- On RBRACE reduce production varDeclaration -> typ IDENT SEMICOLON 
-- On PUBLIC reduce production varDeclaration -> typ IDENT SEMICOLON 
-- On LBRACE reduce production varDeclaration -> typ IDENT SEMICOLON 
-- On INTEGER reduce production varDeclaration -> typ IDENT SEMICOLON 
-- On IDENT reduce production varDeclaration -> typ IDENT SEMICOLON 
-- On BOOLEAN reduce production varDeclaration -> typ IDENT SEMICOLON 

State 68:
list(varDeclaration) -> varDeclaration list(varDeclaration) . [ SYSO RETURN RBRACE PUBLIC LBRACE IDENT ]
-- On SYSO reduce production list(varDeclaration) -> varDeclaration list(varDeclaration) 
-- On RETURN reduce production list(varDeclaration) -> varDeclaration list(varDeclaration) 
-- On RBRACE reduce production list(varDeclaration) -> varDeclaration list(varDeclaration) 
-- On PUBLIC reduce production list(varDeclaration) -> varDeclaration list(varDeclaration) 
-- On LBRACE reduce production list(varDeclaration) -> varDeclaration list(varDeclaration) 
-- On IDENT reduce production list(varDeclaration) -> varDeclaration list(varDeclaration) 

State 69:
classDeclaration -> CLASS IDENT LBRACE list(varDeclaration) . list(methodDeclaration) RBRACE [ EOF CLASS ]
-- On PUBLIC shift to state 70
-- On methodDeclaration shift to state 89
-- On list(methodDeclaration) shift to state 91
-- On RBRACE reduce production list(methodDeclaration) -> 

State 70:
methodDeclaration -> PUBLIC . typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On INTEGER shift to state 59
-- On IDENT shift to state 62
-- On BOOLEAN shift to state 63
-- On typ shift to state 71

State 71:
methodDeclaration -> PUBLIC typ . IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On IDENT shift to state 72

State 72:
methodDeclaration -> PUBLIC typ IDENT . LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On LPAREN shift to state 73

State 73:
methodDeclaration -> PUBLIC typ IDENT LPAREN . loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On INTEGER shift to state 59
-- On IDENT shift to state 62
-- On BOOLEAN shift to state 63
-- On typ shift to state 74
-- On separated_nonempty_list(COMMA,argument) shift to state 76
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 77
-- On argument shift to state 86
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) -> 

State 74:
argument -> typ . IDENT [ RPAREN COMMA ]
-- On IDENT shift to state 75

State 75:
argument -> typ IDENT . [ RPAREN COMMA ]
-- On RPAREN reduce production argument -> typ IDENT 
-- On COMMA reduce production argument -> typ IDENT 

State 76:
loption(separated_nonempty_list(COMMA,argument)) -> separated_nonempty_list(COMMA,argument) . [ RPAREN ]
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) -> separated_nonempty_list(COMMA,argument) 

State 77:
methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) . RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On RPAREN shift to state 78

State 78:
methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN . LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On LBRACE shift to state 79

State 79:
methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE . list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On INTEGER shift to state 59
-- On IDENT shift to state 62
-- On BOOLEAN shift to state 63
-- On varDeclaration shift to state 64
-- On typ shift to state 65
-- On list(varDeclaration) shift to state 80
-- On SYSO reduce production list(varDeclaration) -> 
-- On RETURN reduce production list(varDeclaration) -> 
-- On LBRACE reduce production list(varDeclaration) -> 
-- On IDENT reduce production list(varDeclaration) -> 
** Conflict on IDENT

State 80:
methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) . list(statement) RETURN expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On SYSO shift to state 15
-- On LBRACE shift to state 36
-- On IDENT shift to state 37
-- On statement shift to state 47
-- On list(statement) shift to state 81
-- On RETURN reduce production list(statement) -> 

State 81:
methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) . RETURN expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On RETURN shift to state 82

State 82:
methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN . expression SEMICOLON RBRACE [ RBRACE PUBLIC ]
-- On LPAREN shift to state 17
-- On INT_CONST shift to state 18
-- On IDENT shift to state 19
-- On raw_expression shift to state 20
-- On expression shift to state 83

State 83:
methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression . SEMICOLON RBRACE [ RBRACE PUBLIC ]
raw_expression -> expression . PLUS expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . MINUS expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . TIMES expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . LT expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
raw_expression -> expression . AND expression [ TIMES SEMICOLON PLUS MINUS LT AND ]
-- On TIMES shift to state 22
-- On SEMICOLON shift to state 84
-- On PLUS shift to state 24
-- On MINUS shift to state 28
-- On LT shift to state 26
-- On AND shift to state 31

State 84:
methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON . RBRACE [ RBRACE PUBLIC ]
-- On RBRACE shift to state 85

State 85:
methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE . [ RBRACE PUBLIC ]
-- On RBRACE reduce production methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE 
-- On PUBLIC reduce production methodDeclaration -> PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE list(varDeclaration) list(statement) RETURN expression SEMICOLON RBRACE 

State 86:
separated_nonempty_list(COMMA,argument) -> argument . [ RPAREN ]
separated_nonempty_list(COMMA,argument) -> argument . COMMA separated_nonempty_list(COMMA,argument) [ RPAREN ]
-- On COMMA shift to state 87
-- On RPAREN reduce production separated_nonempty_list(COMMA,argument) -> argument 

State 87:
separated_nonempty_list(COMMA,argument) -> argument COMMA . separated_nonempty_list(COMMA,argument) [ RPAREN ]
-- On INTEGER shift to state 59
-- On IDENT shift to state 62
-- On BOOLEAN shift to state 63
-- On typ shift to state 74
-- On separated_nonempty_list(COMMA,argument) shift to state 88
-- On argument shift to state 86

State 88:
separated_nonempty_list(COMMA,argument) -> argument COMMA separated_nonempty_list(COMMA,argument) . [ RPAREN ]
-- On RPAREN reduce production separated_nonempty_list(COMMA,argument) -> argument COMMA separated_nonempty_list(COMMA,argument) 

State 89:
list(methodDeclaration) -> methodDeclaration . list(methodDeclaration) [ RBRACE ]
-- On PUBLIC shift to state 70
-- On methodDeclaration shift to state 89
-- On list(methodDeclaration) shift to state 90
-- On RBRACE reduce production list(methodDeclaration) -> 

State 90:
list(methodDeclaration) -> methodDeclaration list(methodDeclaration) . [ RBRACE ]
-- On RBRACE reduce production list(methodDeclaration) -> methodDeclaration list(methodDeclaration) 

State 91:
classDeclaration -> CLASS IDENT LBRACE list(varDeclaration) list(methodDeclaration) . RBRACE [ EOF CLASS ]
-- On RBRACE shift to state 92

State 92:
classDeclaration -> CLASS IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE . [ EOF CLASS ]
-- On EOF reduce production classDeclaration -> CLASS IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE 
-- On CLASS reduce production classDeclaration -> CLASS IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE 

State 93:
classDeclaration -> CLASS IDENT EXTENDS . IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE [ EOF CLASS ]
-- On IDENT shift to state 94

State 94:
classDeclaration -> CLASS IDENT EXTENDS IDENT . LBRACE list(varDeclaration) list(methodDeclaration) RBRACE [ EOF CLASS ]
-- On LBRACE shift to state 95

State 95:
classDeclaration -> CLASS IDENT EXTENDS IDENT LBRACE . list(varDeclaration) list(methodDeclaration) RBRACE [ EOF CLASS ]
-- On INTEGER shift to state 59
-- On IDENT shift to state 62
-- On BOOLEAN shift to state 63
-- On varDeclaration shift to state 64
-- On typ shift to state 65
-- On list(varDeclaration) shift to state 96
-- On RBRACE reduce production list(varDeclaration) -> 
-- On PUBLIC reduce production list(varDeclaration) -> 

State 96:
classDeclaration -> CLASS IDENT EXTENDS IDENT LBRACE list(varDeclaration) . list(methodDeclaration) RBRACE [ EOF CLASS ]
-- On PUBLIC shift to state 70
-- On methodDeclaration shift to state 89
-- On list(methodDeclaration) shift to state 97
-- On RBRACE reduce production list(methodDeclaration) -> 

State 97:
classDeclaration -> CLASS IDENT EXTENDS IDENT LBRACE list(varDeclaration) list(methodDeclaration) . RBRACE [ EOF CLASS ]
-- On RBRACE shift to state 98

State 98:
classDeclaration -> CLASS IDENT EXTENDS IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE . [ EOF CLASS ]
-- On EOF reduce production classDeclaration -> CLASS IDENT EXTENDS IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE 
-- On CLASS reduce production classDeclaration -> CLASS IDENT EXTENDS IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE 

State 99:
program -> main_class list(classDeclaration) . EOF [ # ]
-- On EOF shift to state 100

State 100:
program -> main_class list(classDeclaration) EOF . [ # ]
-- On # reduce production program -> main_class list(classDeclaration) EOF 

State 101:
list(classDeclaration) -> classDeclaration . list(classDeclaration) [ EOF ]
-- On CLASS shift to state 56
-- On list(classDeclaration) shift to state 102
-- On classDeclaration shift to state 101
-- On EOF reduce production list(classDeclaration) -> 

State 102:
list(classDeclaration) -> classDeclaration list(classDeclaration) . [ EOF ]
-- On EOF reduce production list(classDeclaration) -> classDeclaration list(classDeclaration) 

