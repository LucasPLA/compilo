
** Conflict (shift/reduce) in state 57.
** Tokens involved: TIMES PLUS MINUS LT LBRACKET DOT AND
** The following explanations concentrate on token TIMES.
** This state is reached from program after reading:

main_class CLASS IDENT LBRACE list(varDeclaration) PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE WHILE LPAREN NOT expression 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
main_class list(classDeclaration) EOF 
           classDeclaration list(classDeclaration) 
           CLASS IDENT LBRACE list(varDeclaration) list(methodDeclaration) RBRACE 
                                                   methodDeclaration list(methodDeclaration) 
                                                   PUBLIC typ IDENT LPAREN loption(separated_nonempty_list(COMMA,argument)) RPAREN LBRACE statAux RETURN expression SEMICOLON RBRACE 
                                                                                                                                          list(statement) 
                                                                                                                                          statement list(statement) 
                                                                                                                                          WHILE LPAREN expression RPAREN statement 
                                                                                                                                                       raw_expression 
                                                                                                                                                       (?)

** In state 57, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

NOT expression 
    raw_expression 
    expression . TIMES expression 

** In state 57, looking ahead at TIMES, reducing production
** raw_expression -> NOT expression 
** is permitted because of the following sub-derivation:

expression TIMES expression // lookahead token appears
raw_expression // lookahead token is inherited
NOT expression . 
